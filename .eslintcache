[{"C:\\Users\\romya\\Desktop\\nasa-app\\src\\index.js":"1","C:\\Users\\romya\\Desktop\\nasa-app\\src\\App.js":"2","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\PhotosList.js":"3","C:\\Users\\romya\\Desktop\\nasa-app\\src\\store.js":"4","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\index.js":"5","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Types\\index.js":"6","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\photosReducer.js":"7","C:\\Users\\romya\\Desktop\\nasa-app\\src\\types\\index.js":"8","C:\\Users\\romya\\Desktop\\nasa-app\\src\\actions\\photosFlow.js":"9","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\Submit.js":"10","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\Cameras.js":"11","C:\\Users\\romya\\Desktop\\nasa-app\\src\\actions\\optionsFlow.js":"12","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\roversReducer.js":"13","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\singleRoverReducer.js":"14","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\MainPage.js":"15","C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\rovers.js":"16","C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\photosList.js":"17","C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\Rovers.js":"18","C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\cameras.js":"19","C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\mainpage.js":"20","C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\submit.js":"21","C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\arrows.js":"22"},{"size":350,"mtime":1607415406796,"results":"23","hashOfConfig":"24"},{"size":609,"mtime":1607514753995,"results":"25","hashOfConfig":"24"},{"size":826,"mtime":1607514814921,"results":"26","hashOfConfig":"24"},{"size":229,"mtime":1607415597781,"results":"27","hashOfConfig":"24"},{"size":256,"mtime":1607438657563,"results":"28","hashOfConfig":"24"},{"size":184,"mtime":1607432802241,"results":"29","hashOfConfig":"24"},{"size":1205,"mtime":1607508053096,"results":"30","hashOfConfig":"24"},{"size":315,"mtime":1607440206633,"results":"31","hashOfConfig":"24"},{"size":514,"mtime":1607449080764,"results":"32","hashOfConfig":"24"},{"size":2477,"mtime":1607549882066,"results":"33","hashOfConfig":"24"},{"size":2139,"mtime":1607521668584,"results":"34","hashOfConfig":"24"},{"size":2176,"mtime":1607525011557,"results":"35","hashOfConfig":"24"},{"size":400,"mtime":1607438551213,"results":"36","hashOfConfig":"24"},{"size":423,"mtime":1607439162817,"results":"37","hashOfConfig":"24"},{"size":1865,"mtime":1607519643261,"results":"38","hashOfConfig":"24"},{"size":1594,"mtime":1607523537120,"results":"39","hashOfConfig":"24"},{"size":453,"mtime":1607511658384,"results":"40","hashOfConfig":"24"},{"size":1917,"mtime":1607522678456,"results":"41","hashOfConfig":"24"},{"size":1542,"mtime":1607522334128,"results":"42","hashOfConfig":"24"},{"size":950,"mtime":1607523445859,"results":"43","hashOfConfig":"24"},{"size":1091,"mtime":1607549882071,"results":"44","hashOfConfig":"24"},{"size":966,"mtime":1607520479385,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"icb9io",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\romya\\Desktop\\nasa-app\\src\\index.js",[],["94","95"],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\App.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\PhotosList.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\store.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\index.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Types\\index.js",[],["96","97"],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\photosReducer.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\types\\index.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\actions\\photosFlow.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\Submit.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\Cameras.js",["98"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {cameraUpdate, solUpdate} from '../actions/optionsFlow';\r\nimport {Grid, Paper, Tooltip} from '@material-ui/core';\r\n\r\nimport camerasStyles from '../styles/cameras'\r\n\r\nfunction Cameras() {\r\n    const {cameras, max_sol} = useSelector(({singleRoverInfo}) => singleRoverInfo);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = camerasStyles();\r\n    const [active, setActive] = useState(0);\r\n    const [sol, setSol] = useState(1000);\r\n\r\n    useEffect(() => {\r\n        dispatch(cameraUpdate(cameras[0].name));\r\n        dispatch(solUpdate(sol));\r\n    }, [cameras, max_sol])\r\n\r\n    return (\r\n        <div className={classes.camerasMain}>\r\n            <div className={classes.camerasH1}>\r\n                <h1>Select which camera and\r\n                    <Tooltip title='A mars day which is approx. 24 hours, 39 minutes' placement={\"top\"} arrow={true}>\r\n                        <span> sol </span>\r\n                    </Tooltip>\r\n                    you want</h1>\r\n            </div>\r\n            <Grid container justify='center' className={classes.root}>\r\n                {cameras?.map((camera, index) =>\r\n                    <Paper key={index} onClick={() => {\r\n                        dispatch(cameraUpdate(camera.name));\r\n                        setActive(index)\r\n                    }} className={`${classes.paper} ${active === index ? classes.active : ''}`\r\n                    }>\r\n                        <h2 className={classes.cameraName}>{camera.full_name}</h2>\r\n                    </Paper>)\r\n                }\r\n            </Grid>\r\n            <div className={classes.solInputDiv}>\r\n                <input className={classes.solInput} id=\"sol\" type='text' value={sol > max_sol ? max_sol : sol} onChange={(e) => setSol(Number(e.target.value))} placeholder={1000}\r\n                       onInput={(e) => dispatch(solUpdate(e.target.value))}/>\r\n                <label className={classes.solInputLabel} htmlFor=\"sol\">Max sol is {max_sol}</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cameras;\r\n","C:\\Users\\romya\\Desktop\\nasa-app\\src\\actions\\optionsFlow.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\roversReducer.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Reducers\\singleRoverReducer.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\MainPage.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\rovers.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\photosList.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\Components\\Rovers.js",["99"],"import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Grid, Paper} from '@material-ui/core';\n\nimport {roverSelect} from '../actions/optionsFlow'\nimport roversStyles from '../styles/rovers'\n\nfunction Rovers() {\n    const dispatch = useDispatch();\n    const classes = roversStyles();\n\n    const [active, setActive] = useState(0);\n    const {rovers} = useSelector(({roversInfo}) => roversInfo);\n\n    useEffect(() => {\n        rovers.length && dispatch(roverSelect(rovers[0].name));\n    }, [rovers])\n\n    return (\n        <>\n\n            <Grid container justify='center' className={classes.root} spacing={4}>\n                <div className={classes.introMessage}>\n                    <h1>Before starting, let's do some settings up</h1>\n                </div>\n                {\n                    rovers?.map((rover, index) => {\n                        return (\n                            <Grid item key={index}>\n                                <Paper className={`${classes.paper} ${active === index ? classes.active : ''}`}\n                                       onClick={() => {\n                                           setActive(index)\n                                           dispatch(roverSelect(rover.name))\n                                       }}>\n                                    <h1 className={classes.roverName}>{rover.name}</h1>\n                                    <h2 className={classes.roverDate}>Launch date: {rover.launch_date}</h2>\n                                    <h2 className={classes.roverDate}>Landing date: {rover.landing_date}</h2>\n                                    <h3 className={classes.roverSols}>Sols on mars: {rover.max_sol}</h3>\n                                </Paper>\n                            </Grid>\n                        )\n                    })}\n            </Grid>\n        </>\n    )\n}\n\nexport default Rovers;","C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\cameras.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\mainpage.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\submit.js",[],"C:\\Users\\romya\\Desktop\\nasa-app\\src\\styles\\arrows.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"102","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":19,"column":8,"nodeType":"108","endLine":19,"endColumn":26,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":17,"column":8,"nodeType":"108","endLine":17,"endColumn":16,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'sol'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [cameras, dispatch, max_sol, sol]",{"range":"120","text":"121"},"Update the dependencies array to be: [dispatch, rovers]",{"range":"122","text":"123"},[669,687],"[cameras, dispatch, max_sol, sol]",[544,552],"[dispatch, rovers]"]